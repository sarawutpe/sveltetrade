{assign var="allow" value="none"}
{assign var="meta_title" value=""}
{include file="header.tpl"}
<p>{literal} .Treant &gt; .node { text-align: center; } .Treant &gt; .node p { margin: 1px; } .Treant &gt; .node img { float:none; } .Treant &gt; .node:hover .node-name:after { opacity: 1; display: inline-block; } .Treant &gt; .node .node-name:after { white-space: pre; opacity: 0; content: 'Deposit: ' attr(data-deposit); position: absolute; top: 100%; left: 0; color: #fff; transition: opacity 0.3s; border-radius: 6px; background-color: #555; padding: 5px 5px; width: 120px; display: none; font-size: 90%; z-index: 1000; text-align: left; } function createTree(t) { var e = { chart: { container: "#refstree", rootOrientation: "NORTH", hideRootNode: false, nodeAlign: "top", siblingSeparation: 20, subTeeSeparation: 20, levelSeparation: 20, padding: 10, connectors: { type: "curve", style: { stroke: "black", "arrow-end": "classic-wide-long" } }, node: { collapsable: 0, } }, nodeStructure: t }; var chart_config = [e.chart]; for (i in t) { chart_config.push(t[i]); } new Treant(chart_config, function() { // $(".loader").spin(!1) }) } {/literal} {loaddata name="user_referrals" referrals=1 var=refs} var t = {}; t[{$userinfo.id}] = {ldelim} text: {ldelim}name:"{$userinfo.username}"{rdelim}, image: "./images/user.png" {rdelim}; {foreach from=$refs.referrals item=lvl} {foreach from=$lvl item=r} //t[{$r.id}] = {ldelim}parent: t[{$r.ref}], text: {ldelim}name:"{$r.username}", 'data-foo': "Deposit: {$r.deposits_amount|fiat}\nRef.Comm: {$r.ref_commission|fiat}"{rdelim}, image: "./images/user.png" {rdelim}; t[{$r.id}] = {ldelim}parent: t[{$r.ref}], innerHTML: '&lt;img src="./images/user.png"&gt;&lt;p class="node-name" data-deposit="{$r.deposits_amount|fiat}"&gt;{$r.username}&lt;/p&gt;' {rdelim}; {/foreach} {/foreach} createTree(t); {* {loaddata name="user_referrals" referrals=1 var=refs} var treeData = []; {foreach from=$refs.referrals item=lvl} {foreach from=$lvl item=r} treeData.push([{$r.ref}, {$r.id}, '{$r.username}']); {/foreach} {/foreach} {literal} Highcharts.chart('container', { chart: { height: 600, inverted: true }, title: { text: '' }, series: [{ type: 'organization', name: '', keys: ['from', 'to', 'name'], data: treeData, colorByPoint: false, color: '#007ad0', dataLabels: { color: 'white', // format: '&lt;b&gt;{series.name} {#each(point)}&lt;/b&gt;', formatter: function(p) { alert(1); } }, borderColor: 'white', nodeWidth: 85 }], tooltip: { outside: true } }); {/literal} *}</p>
{include file="footer.tpl"}